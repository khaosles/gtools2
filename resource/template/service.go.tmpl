package {{.Pkg}}

import (
	"sync"

	{{.Pkg}}Model "{{.Project}}/model/{{.Pkg}}"
	"github.com/khaosles/gtools2/components/g"
	gerr "github.com/khaosles/gtools2/utils/err"
)

/*
   @File: {{.NameSnake}}_service.go
   @Author: khaosles
   @Time: {{.Date}}
   @Desc: Automatic code generation
*/

var (
    {{.Name}}ServiceInstance {{.NameUpper}}Service
	once{{.NameUpper}}       sync.Once
)

type {{.NameUpper}}Service interface {
	g.Service[{{.Pkg}}Model.{{.NameUpper}}]
}

func Get{{.NameUpper}}ServiceInstance() {{.NameUpper}}Service {
    if {{.Name}}ServiceInstance == nil {
        panic(gerr.NotImplementedException.New("{{.NameUpper}}Service not implemented."))
    }
	return {{.Name}}ServiceInstance
}

func Inject{{.NameUpper}}Service({{.Name}}Service {{.NameUpper}}Service) {
	once{{.NameUpper}}.Do(func() {
		if {{.Name}}ServiceInstance == nil {
			{{.Name}}ServiceInstance = {{.Name}}Service
		}
	})
}
